#! /usr/local/bin/perl
# EPN 09.06.05 based on hmmer.rmm from SRE
# infernal.rmm 
#
# RMARK module for INFERNAL
#
# Options:
#        -E <x> : use E-values [default], set max E-val to keep as <x> [df: 2]
#        -B <x> : use bit scores, set min score to keep as <x>
#        -M <x> : use CM in file <x>, instead of building it

require "sre.pl";
use Getopt::Std;

$e_cutoff = 2;
$b_cutoff = 0.0;
$use_evalues   = 1;
$use_bitscores = 0;
$do_build_model = 1;

getopts('E:B:M:');
if (defined $opt_E) { $e_cutoff = $opt_E; }
if (defined $opt_B) { $b_cutoff = $opt_B; $use_evalues = 0; $use_bitscores = 1; }
if (defined $opt_M) { $do_build_model = 0; $cm = $opt_M; }

$configfile = shift;
$idxfile    = shift;
$alifile    = shift;
$testfile   = shift;

# Set up defaults for configurable options
#
$cmb = "cmbuild";
$cms = "cmsearch";
$tmp  = &tempname();

# Include the configfile, overriding defaults
#
require "$configfile";

# Build model and do the search
#
# make sure testfile exists
if(! (-e ($testfile))) { printf STDERR ("ERROR  in infernal.rmm: testfile $tesfile does not exist.\n"); exit(1); }
if($do_build_model) { 
    system("nice $cmb $tmp.cm $alifile > /dev/null");
    $cm = "$tmp.cm";
}
else { #CM was provided as <x> with -M <x>, make sure it exists 
    if(! (-e ($cm)))       { printf STDERR ("ERROR  in infernal.rmm: cm file $cm does not exist.\n"); exit(1); }
}

system("nice $cms --noalign $cm $testfile > $tmp.out");
if($use_evalues)
{
    system("perl infernal2glbf.pl -E $e_cutoff $tmp.out");
}
elsif($use_bitscores)
{
    system("perl infernal2glbf.pl -B $b_cutoff $tmp.out");
}
# Clean up
#
unlink "$tmp.cm";
unlink "$tmp.out";
