#######################################################
# Makefile.in for infernal/rigfilters/lp_solve
# 
# This Makefile is not one of the standard ones provided
# with the lp_solve package.  It has be written specially
# for integration of installation with the infernal 
# package, and relies on infernal's top-level configure
#
# It does NOT build the lp_solve executable, only the
# compiled library.
#######################################################

# your compiler and compiler flags
CC     = @CC@
CFLAGS = @CFLAGS@

#should be OK in most situations:
#CFLAGS= -O

# nice for gcc
#CFLAGS= -O3 -Wall -pedantic -ansi
#CFLAGS= -g -Wall -pedantic -ansi

# Option -DCHECK checks for numerical problems during rounding of numbers.
# It will slow things down a bit.
# You can add a -DREAL=<float type> to the CFLAGS, to change the default float
# type used in lp_solve (double) to float or 'long double'. However, type float
# might be fast on your computer, but it is not accurate enough to solve even
# moderately sized problems without running into numerical problems.
# The use of long doubles does increase the numerical stability of lp_solve,
# if your compiler actually implements them with more bits than a double. But
# it slows down things quite a bit.

YACC = @YACC@

LEX = @LEX@

LEXLIB = @LEXLIB@

LIBS = @LIBS@

LPKSRC.c= src/lpkit.c src/solve.c src/debug.c src/read.c src/readmps.c src/hash.c src/presolve.c
LEXFILE.l= src/lex.l
YACCFILE.y= src/lp.y

LPKLIB=src/liblpk.a

LEXFILE.c= $(LEXFILE.l:.l=.c)
YACCFILE.c= $(YACCFILE.y:.y=.c)
YACCFILE.o= $(YACCFILE.y:.y=.o)
CSOURCES= $(LEXFILE.c) $(YACCFILE.c)
COBJ=$(CSOURCES:.c=.o)
LPKSRC= $(LPKSRC.c) $(YACCFILE.c)
LPKOBJ= $(LPKSRC:.c=.o)

all:	$(LPKLIB)

%.o: %.c
	$(CC) -c $(CFLAGS) -o $@ $<

$(LPKLIB): $(LPKOBJ)
	ar rv $@ $(LPKOBJ)
	ranlib $(LPKLIB)

$(YACCFILE.o): $(LEXFILE.c)

$(LEXFILE.c): $(LEXFILE.l)
	$(LEX) $(LEXFILE.l)
	sed -e "s/yy/lp_yy/g" lex.yy.c >$(LEXFILE.c)
	rm lex.yy.c

$(YACCFILE.c): $(YACCFILE.y)
	$(YACC) $(YACCFILE.y)
	sed -e "s/yy/lp_yy/g" y.tab.c >$(YACCFILE.c)
	rm y.tab.c

clean:
	rm -f src/*.a src/*.o $(LEXFILE.c) $(YACCFILE.c)

distclean:
	make clean
	-rm Makefile
