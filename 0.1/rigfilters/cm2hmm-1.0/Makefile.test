variable_CFLAGS=-D DISABLE_ZRAND -D CM2HMM_ONLY
variable_LFLAGS=
COMPILE=g++ -c
LINK=g++

INFERNAL_PATH=../..
CFSQP_PATH=$(INFERNAL_PATH)/rigfilters/cfsqp

LIBS=$(INFERNAL_PATH)/src/libinfernal.a $(INFERNAL_PATH)/squid/libsquid.a $(CFSQP_PATH)/cfsqp.a
common_CFLAGS=-ftemplate-depth-30 -idirafter . -idirafter $(INFERNAL_PATH)/src -idirafter $(INFERNAL_PATH)/squid -idirafter $(CFSQP_PATH)
common_LFLAGS= -g

# debug build
#CFLAGS:=$(CFLAGS) $(common_CFLAGS) -g -D_DEBUG

# release build
CFLAGS=$(variable_CFLAGS) $(common_CFLAGS) -O3 -g -DNDEBUG
LFLAGS=$(variable_LFLAGS) $(common_LFLAGS)

# all .cpp files (or .C files)
CPPFILES=CovarianceModel.cpp InfernalHmm.cpp cmzashaUtils.cpp ForwardHMM.cpp Cm2HMM.cpp Cm2HmmOptimize.cpp SymbolicMath.cpp Cm2HmmOptimize_cfsqp.cpp MarkovModelStats.cpp HmmType1.cpp CommaSepFileReader.cpp MiscExceptions.cpp NaryCounter.cpp SequenceSet.cpp ScanHMM_NonTemplated.cpp

# include files that pretty much everything includes.
# FOR LAZINESS, just put every include file, so we don't have to worry about the dependencies too much
COMMON_INCLUDE_FILES=CovarianceModel.h stdafx.h Cm2HMM.h cmzasha.h SymbolicMath.h HmmType1.h MarkovModelStats.h Cm2HmmOptimize.h CommaSepFileReader.h MiscExceptions.h multiDimVector.h NoUnderflowDouble.h stl_extra.h vectorPlus.h NaryCounter.h InfernalHmm.h SequenceSet.h


# automatically inferred stuff
CPP_O_FILES=$(CPPFILES:%.cpp=%.o)
OBJS=$(CPP_O_FILES)

.PHONY : all clean dump_vars
all : cm2hmm cm2hmmsearch

$(CPP_O_FILES) : $(COMMON_INCLUDE_FILES)

cm2hmm : $(OBJS) Cm2HmmMain.o
	$(LINK) -o cm2hmm $(LFLAGS) Cm2HmmMain.o $(OBJS) $(LIBS)
cm2hmmsearch : $(OBJS) Cm2HmmSearchMain.o
	$(LINK) -o cm2hmmsearch $(LFLAGS) Cm2HmmSearchMain.o $(OBJS) $(LIBS)

.SUFFIXES: .cpp .o
.cpp.o:
	$(COMPILE) $(CFLAGS) -o $@ $<

clean:
	rm -f *.o cm2hmm cm2hmmsearch

distclean:
	make clean

dump_vars :
	echo "CPPFILES"
	echo $(CPPFILES)
	echo "COMMON_INCLUDE_FILES"
	echo $(COMMON_INCLUDE_FILES)
	echo "CPP_O_FILES"
	echo $(CPP_O_FILES)
