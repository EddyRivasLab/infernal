.TH "cmcalibrate" 1 "@RELEASEDATE@" "@PACKAGE@ @RELEASE@" "@PACKAGE@ Manual"

.SH NAME
.TP 
cmcalibrate - fit exponential tails for E-values and determine HMM
	      filter thresholds for a CM

.SH SYNOPSIS
.B cmcalibrate
.I [options]
.I cmfile

.SH DESCRIPTION

.B cmcalibrate
calibrates E-value statistics and HMM filter thresholds for the 
covariance models (CMs) in
.I cmfile. 
The E-values and HMM filter threshold statistics are added to the 
.I cmfile
and are used by
.B cmsearch
for increased sensitivity and acceleration in RNA homology search.

.PP
CM files are profiles of RNA consensus secondary structure. A
CM file is produced by the 
.B cmbuild 
program, from a given RNA sequence alignment of known 
consensus structure.

.B cmcalibrate
is very slow. It often takes hours, or tens of hours to calibrate a
single average sized CM. 
.B cmcalibrate
can be run in parallel with MPI.
To do this, use the
.B --mpi 
option and run cmsearch inside a MPI wrapper program such as 
.B mpirun. 
For example: 
.B mpirun C
.B cmcalibrate
.I --mpi 
.I [other options]
.I cmfile

The 
.BI --forecast " <n>" 
option can be used to estimate how long the program will take to run
on 
.I <n>
processors. Unless you plan on running
.B cmcalibrate
in MPI mode, 
.I <n>
 should be set as 1.

.PP
.B cmcalibrate
performs two main tasks. The first is to calibrate E-value
statistics.  This is done by generating random
sequences and searching them with the CM and collecting hits. The histogram of the bit
scores of the hits is fit to an exponential tail, and the parameters
of the fitted tail are saved to the CM file. The exponential tail is
used to predict the expected number of hits (E-values) at a given bit score in 
.B cmsearch.
The second task is to determine appropriate HMM filter
thresholds for the CM over the possible range of final CM bit score
thresholds. This is done by sampling 10,000 sequences from the CM
itself and searching them with the CM and HMM. The appropriate HMM bit
score threshold for a given CM threshold is set as the HMM threshold that
will recognize 99% of the hits that score above the CM threshold. This
HMM threshold is calculated over the range of reasonable CM
thresholds. 

Both tasks must be performed for each configuration and
algorithm that 
.B cmsearch 
might use. These include HMM Viterbi, HMM Forward, CM CYK and CM
Inside algorithms for E-value calibration, and CM CYK and CM Inside
algorithms for HMM filter thresholds. Additionally, for each
algorithm, each task must be performed twice, once for a locally
configured model and once for a globally configured model.

The E-values and HMM filter thresholds determined by 
.B cmcalibrate
are only used by the
.B cmsearch 
program.
If you are not going to use 
.B cmsearch,
do not waste time calibrating your models.

The majority of the options to 
.B cmcalibrate
fall into one of two categories, depending on which of the two main
tasks they're associated with. Options that affect the
exponential tail E-value fitting are prefixed with 
.B --exp.
Options that affect the HMM filter threshold determination are
prefixed with 
.B --fil.

ADD SOMETHING HERE ABOUT THE WAY CMCALIBRATE DETERMINES THE LENGTH OF
RANDOM SEQUENCE FOR CM AND HMMS.

.SH OPTIONS

.TP
.B -h
Print brief help; includes version number and summary of
all options, including expert options.

.TP
.BI -s " <n>"
Set the random number generator seed to 
.I <n>, 
where 
.I <n> 
is a positive integer. 
The default is to use time() to
generate a different seed for each run, which means that two different
runs of 
.B cmcalibrate
on the same CM will give slightly different
E-value and HMM filter threshold parameters. You can use this option
to generate reproducible results.


.TP
.BI --forecast " <n>"
Predict the running time of the calibration for 
.I cmfile 
and provided options
and exit, DO NOT perform the calibration. 
The predictions should be used as rough
estimates. The value 
.I <n>
is the number of processors the calibration will be run on, so 
.I <n>
equal to 1 is appropriate unless you will run 
.B cmcalibrate
in parallel with MPI.

.SH EXPERT OPTIONS

.TP
.BI --exp-T " <x>"
Set the bit score cutoff for collecting hits for exponential tail
fitting to 
.I <x>.
By default, the cutoff is negative infinity, so all non-overlapping
hits are collected. Only use this option if you really know what
you're doing.

.TP
.BI --exp-cmL " <x>"
Set the length of random sequence to search for the CM exponential
tail fits to 
.I <x> 
megabases (Mb). By default, 
.I <x> is
1 Mb. Searching more sequences will make the exponential tail fits
more precise, but will take longer: using 
.I <x> 
of 2 instead of the default of 1 will cause the running time of
.B cmcalibrate 
to roughly double.

.TP
.BI --exp-fract " <x>"
Set the HMM/CM fraction of dynamic programming calculations to 
.I <x>.
By default, 
.I <x>
is 0.10. 
Fitting exponential tails for the HMM search algorithms is much
quicker than for the CM search algorithms so it is possible to search
longer sequences when fitting the HMM algorithms without significantly
increasing the overall running time of 
.B cmcalibrate.
Searching longer sequences for exponential tail fitting leads to more
accurate fits. 
By default, the length of sequence searched for HMM
algorithms is set as the length that would require 1/10 = 0.10 the number of
dynamic programming calculations for the HMM relative to the CM.
This means the HMM tail fit should take roughly 10\% the time that
the CM tail fit would take. The 
.B --exp-fract " <x>" 
option allows the user to change this value to 
.I <x>.

.TP
.BI --exp-hmmLn " <x>"
Set the minimum random sequence length to search when determining HMM
E-values to 
.I <x>
megabases (Mb). By default, 
.I <x>
is 10.0.

.TP
.BI --exp-hmmLx " <x>"
Set the maximum random sequence length to search when determining HMM
E-values to  
.I <x>
megabases (Mb). By default, 
.I <x>
is 1000.0.

.TP
.BI --exp-hmmLx " <x>"
Set the maximum random sequence length to search when determining HMM
E-values to  
.I <x>
megabases (Mb). By default, 
.I <x>
is 1000.0.

HERE HERE 



Fitting exponential tails for the HMM search algorithms is much
quicker than for the CM search algorithms so it is possible to search
longer sequences when fitting the HMM algorithms without significantly
increasing the overall running time of 
.B cmcalibrate.
Searching longer sequences for exponential tail fitting leads to more
accurate fits. 
By default, the length of sequence searched for HMM
algorithms is set as the length that would require 1/10 = 0.10 the number of
dynamic programming calculations for the HMM relative to the CM.
This means the HMM tail fit should take roughly 10\% the time that
the CM tail fit would take. The 
.B --exp-fract " <x>" 
option allows the user to change this value to 
.I <x>.



1 Mb. Searching more sequences will make the exponential tail fits
more precise, but will take longer: using 
.I <x> 
of 2 instead of the default of 1 will cause the running time of
.B cmcalibrate 
to roughly double.

.I <x>.
By default, the cutoff is negative infinity, so all non-overlapping
hits are collected. Only use this option if you really know what
you're doing.


target database, and global with respect to the model. By default, 
the local alignment algorithm is used which is local with respect to
both the target sequence and the model. In local mode, the alignment
to span two or more subsequences if necessary (e.g. if the structures
of the query model and target sequence are only partially shared),
allowing certain large insertions and deletions in the structure
to be penalized differently than normal indels.
Local mode performs better on empirical benchmarks and is 
significantly more sensitive for remote homology detection.
Empirically, glocal searches return many fewer hits than
local searches, so glocal may be desired for some applications.


.TP
.BI --informat " <s>"
Assert that the input 
.I seqfile
is in format
.I <s>.
Do not run Babelfish format autodection. This increases
the reliability of the program somewhat, because 
the Babelfish can make mistakes; particularly
recommended for unattended, high-throughput runs
of @PACKAGE@. 
.I <s>
is case-insensitive.
This option is a bit forward-looking;
.B cmcalibrate 
currently only accepts FASTA format, but
this may not be true in the future.

.TP 
.B --toponly
Only search the top (Watson) strand of the sequences in
.I seqfile.
By default, both strands are searched.

.TP 
.B --bottomonly
Only search the bottom (Crick) strand of the sequences in
.I seqfile.
By default, both strands are searched.


.TP
.B --null2
Turn on the post hoc second null model that attempts to deal with
the potential biased composition of hits. This option has not been
rigorously tested, use at your own risk.

.TP
.BI --forecast " <n>"
Predict the running time of the search with provided files and options
and exit, DO NOT perform the search. This option is only available
with calibrated CM files. The predictions should be used as rough
estimates and can be fairly inaccurate, especially for highly biased
target databases (for example 80% AT genomes). The value for
.I <n>
is the number of processors the search will be run on, so 
.I <n>
equal to 1 is appropriate unless you will run 
.B cmcalibrate
in parallel with MPI.

.SH EXPERT OPTIONS

.TP 
.B --inside
Use the Inside algorithm for the final round of searching. This is
true by default.

.TP 
.B --cyk
Use the CYK algorithm for the final round of searching. 

.TP 
.B --viterbi
Search only with an HMM. This is much faster but less sensitive than a
CM search. Use the Viterbi algorithm for the HMM search.

.TP 
.B --forward
Search only with an HMM. This is much faster but less sensitive than a
CM search. Use the Forward algorithm for the HMM search.

.TP 
.BI -E " <x>"
Set the E-value cutoff for the per-sequence/strand ranked hit list to 
.I <x>,
where
.I <x>
is a positive real number. Hits with E-values
better than (less than) or equal to this threshold will be shown. This
option is only available if the CM file has been calibrated. This
threshold is relevant only to the final round of searching performed
after all filters have been used, not to the filter rounds themselves.

.TP 
.BI -T " <x>"
Set the bit score cutoff for the per-sequence ranked hit list to
.I <x>,
where
.I <x> 
is a positive real number.
Hits with bit scores better than (greater than) this threshold
will be shown. This
threshold is relevant only to the final round of searching performed
after all filters have been used, not to the filter rounds themselves.

.TP 
.BI --nc
Set the bit score cutoff as the NC cutoff value used by Rfam curators
as the noise cutoff score. This is the highest scoring hit found by
this model during Rfam curation that the Rfam curators defined as a
noise (false positive) sequence.
The NC cutoff is defined as "<x>" bits in the original
Stockholm alignment the model was built from 
with a line:
.I "#=GF NC <x>"
positioned before the sequence alignment. If such a line existed in the
alignment provided to 
.B cmbuild
then the 
.B --nc
option will be available in 
.B cmcalibrate.
If no such line existed when
.B cmbuild
was run, then using the
.B --nc 
option to 
.B cmcalibrate
will cause the program to print an error message and exit.

.TP 
.BI --ga
Set the bit score cutoff as the GA cutoff value used by Rfam curators
as the gathering threshold. The GA cutoff is defined in a stockholm
file used to build the model in the same way as the NC cutoff (see above),
but with a line:
.I "#=GF GA <x>"
.

.TP 
.BI --tc
Set the bit score cutoff as the TC cutoff value used by Rfam curators
as the trusted cutoff. The TC cutoff is defined in the stockholm file
used to build the model in the same way as the NC cutoff (see above),
but with a line:
.I "#=GF TC <x>"
.

.TP 
.B --no-qdb
Do not use query-dependent banding (QDB) for the final round of
search. By default, QDB is used in the final round of search, after
all filtering is finished. 

.TP 
.BI --beta " <x>"
For query-dependent banding (QDB) during the final round of search,
set the beta parameter to 
.I <x>
where
.I <x>
is any positive real number less than 1.0. Beta is the probability
mass considered negligible during band calculation. The default beta
for the final round of search is 1E-15.

.TP 
.BI --hbanded
Use HMM bands to accelerate the final round of search. Constraints for
the CM search are derived from posterior probabilities from an HMM. 
This is an experimental option and it is not recommended for use 
unless you know exactly what you're doing. 

.TP 
.BI --tau " <x>"
Set the tail loss probability during HMM band calculation to 
.I <x>. 
This is the amount of probability mass within the HMM posterior
probabilities that is considered negligible. The default value is 1E-7.
In general, higher values will result in greater acceleration, but
increase the chance of missing the optimal alignment due to the HMM
bands. This option only makes sense in combination with
.B --hbanded
.

.TP 
.B --aln2bands
When calculating HMM bands, use an HMM alignment algorithm instead of
an HMM search algorithm. In general, using this option will result in
greater acceleration, but will increase the chance of missing the
optimal alignment. 
This option only makes sense in combination with
.B --hbanded.

.TP 
.B --fil-qdb
Use the accelerated QDB CYK algorithm as a filter. This option is ON
by default.

.TP 
.B --fil-beta
For the QDB filter, 
set the beta parameter to 
.I <x>
where
.I <x>
is any positive real number less than 1.0. Beta is the probability
mass considered negligible during band calculation. The default beta
for the QDB filter round of search is 1E-7.

.TP 
.B --fil-no-qdb
Turn the QDB filter off. 

.TP 
.B --fil-hmm
Filter with a HMM to accelerate search. This filter is on by
default. If used in combination with a QDB filter, the HMM filter will
be run first.

.TP 
.B --fil-no-hmm
Turn the HMM filter off.


.TP 
.BI --fil-T-qdb " <x>"
Set the bit score cutoff for the QDB filter round to
.I <x>,
where
.I <x> 
is a positive real number.
Hits with bit scores better than (greater than) this threshold
will survive the QDB filter and be passed to the final round. 

.TP 
.BI --fil-T-hmm " <x>"
Set the bit score cutoff for the HMM filter round to
.I <x>,
where
.I <x> 
is a positive real number.
Hits with bit scores better than (greater than) this threshold
will survive the HMM filter and be passed to the next round, either
a QDB filter round, or if the QDB filter is disabled, to 
the final round of search.

.TP 
.BI --fil-E-qdb " <x>"
Set the E-value cutoff for the QDB filter round.
.I <x>,
where
.I <x>
is a positive real number. Hits with E-values
better than (less than) or equal to this threshold will survive and be
passed to the final round. This
option is only available if the CM file has been calibrated. 

.TP 
.BI --fil-E-hmm " <x>"
Set the E-value cutoff for the HMM filter round.
.I <x>,
where
.I <x>
is a positive real number. Hits with E-values
better than (less than) or equal to this threshold will survive and be
passed to the next round, either a QDB filter round, or if the
QDB filter is disable, to the final round of search. This
option is only available if the CM file has been calibrated. 

.TP 
.BI --fil-Smax-hmm " <x>"
Set the maximum predicted survival fraction for an HMM filter as 
.I <x>,
where
.I <x> 
is a positive real number less than 1.0.
The E-value cutoff for the HMM filter will be set as the value
.I <y>,
such that if 
.I <y>
hits survived the filter it is predicted that exactly
.I <x>
fraction of the residues in the database would survive.

.TP
.BI -p 
Append posterior probabilities to alignments of hits. For more
information on posterior probabilities see the description of the
.B -p 
option in the manual page for 
.B cmalign.

.TP 
.B --noalign
Do not calculate and print alignments of each hit, only print locations
and scores.

.TP 
.B --alncyk
Calculate alignments of hits from final round of search using the CYK
algorithm which computes the highest scoring alignment. By default, an
optimal accuracy algorithm is used which computes the most accurate
alignment given the model, which can be different from the highest
scoring one.

.TP 
.B --addx
Annotate non-compensatory basepairs with x's in the alignments of
hits. The x's appear above the structural annotation in the alignment
output. Basepairs without x's above them are compensatory with respect
to the model. Compensatory mutations are good evidence for structural
homology.

.TP 
.BI --tabfile " <f>"
Create a new output file 
.I <f>
and print tabular results to it.
The format of the tabular results is given in the User Guide.
The tabular results can be more easily parsed than the default
.B cmcalibrate 
output. 

.TP 
.BI --gcfile " <f>"
Create a new output file 
.I <f>
and print statistics of the GC content of the sequences in 
.I seqfile 
to it. 
The sequences are partitioned into 100 nt non-overlapping windows, and
the GC percentage of each window is calculated. A normalized histogram
of those GC percentages is then printed to 
.I <f>
. 
The format of 
.I <f> 
is explained in the User Guide.

.TP
.BI --rna
Output the hit alignments as RNA sequences alignments. This is true by default.

.TP
.BI --dna
Output the hit alignments as DNA sequence alignments. 

.TP
.BI --stall
Stall the program immediately after starting up to allow a user
to attach a debugging tool such as gdb to the process.
Developed for debugging under MPI parallelization, which is turned on
with the 
.B --mpi
option.  This option will only be available if @PACKAGE@ has been configured
and built with the "--enable-mpi" flag (see User's Guide for details).

.TP
.BI --mxsize " <x>"
Set the maximum allowable DP matrix size to 
.I <x>
megabytes. By default this size is 2,048 Mb. 
This should be large enough for the vast majority of alignments, 
however if it is not 
.B cmalign 
will exit prematurely and report an error message that 
the matrix exceeded it's maximum allowable size. In this case, the
.B --mxsize 
can be used to raise the limit.
This is most likely to occur when the
.B --nonbanded
option is used without the
.B --small 
option, but can still occur when
.B --nonbanded 
is not used.

.TP
.BI --mpi
Run as an MPI parallel program. This option will only be available if
@PACKAGE@ 
has been configured and built with the "--enable-mpi" flag (see User's
Guide for details).
