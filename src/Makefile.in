#################################################################
# Infernal
# src Makefile
# CVS $Id$
#################################################################
# @LICENSE@
#################################################################

SHELL  = /bin/sh

## your compiler and compiler flags
#
CC     = @CC@
CFLAGS = @CFLAGS@

## other defined flags. 
#  DEFS contains stuff that autoconf 
#  decides on. MDEFS contains stuff that we added to
#  the configure script tests. LIBS contains system
#  libraries that the configure script decides we need.
#
MDEFS = @MDEFS@ @DEFS@
LIBS  = @LIBS@ 

## archiving command, and ranlib command if you need one.
#  In general, you shouldn't need to change these, and they're
#  only used for building the testsuite anyway... e.g. we
#  make a "libhmmer.a" library for building the testsuite.
#
AR     = ar rcv 
RANLIB = @RANLIB@

# Where the build arena is (module .h and .o files)
#
MYLIBS   = -lsquid
MYLIBDIR = -L../squid
MYINCDIR = -I../squid

PROGS = cmalign cmbuild cmscore cmsearch

OBJS  = alphabet.o\
	bandcyk.o\
	cm.o\
	cmio.o\
	display.o\
	emit.o\
	emitmap.o\
	globals.o\
	modelconfig.o\
	modelmaker.o\
	parsetree.o\
	rna_ops.o\
	scancyk.o\
	smallcyk.o

HDRS  = funcs.h\
	structs.h

.c.o: 
	$(CC) $(CFLAGS) $(MDEFS) $(MYINCDIR) -c $<

#################################################################
## Targets defining how to make INFERNAL executables.
##
all: 	$(PROGS) 

$(PROGS): @EXEC_DEPENDENCY@ $(OBJS) 
	$(CC) $(CFLAGS) $(MDEFS) $(MYLIBDIR) -o $@ $@.o $(OBJS) $(MYLIBS) $(LIBS)

#################################################################
## Targets used in making INFERNAL module for testsuite compilation.
##
module: libinfernal.a

libinfernal.a: $(OBJS) 
	$(AR) libinfernal.a $(OBJS) 
	$(RANLIB) libinfernal.a
	chmod 644 libinfernal.a


#################################################################
## Miscellaneous targets.
##
distclean:
	make clean
	-rm -f Makefile config.h

clean:
	-rm -f *.o *~ Makefile.bak core $(PROGS) TAGS gmon.out libinfernal.a

TAGS:
	etags -t *.c *.h Makefile.in

