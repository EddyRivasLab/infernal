# For verbose output:
#     % make V=1
#

# VPATH and shell configuration
top_srcdir = @top_srcdir@
srcdir     = @srcdir@
VPATH      = @srcdir@ 
SHELL      = /bin/sh

# Installation targets
#
prefix      = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
bindir      = @bindir@
libdir      = @libdir@
includedir  = @includedir@
mandir      = @mandir@
docdir      = @docdir@
pdfdir      = @pdfdir@
mandir      = @mandir@
man1dir     = ${mandir}/man1
man1ext     = .1

CC        = @CC@
CFLAGS    = @CFLAGS@ @PTHREAD_CFLAGS@
SIMDFLAGS = @SIMD_CFLAGS@
CPPFLAGS  = @CPPFLAGS@
LDFLAGS   = @LDFLAGS@
DEFS      = @DEFS@
LIBS      = -linfernal -lhmmer -leasel @LIBS@ @LIBGSL@ @PTHREAD_LIBS@ -lm
MPILIBS   = @MPILIBS@

AR        = @AR@ 
RANLIB    = @RANLIB@
INSTALL   = @INSTALL@

IMPLDIR   = impl_@IMPL_CHOICE@
ESLDIR    = @INFERNAL_ESLDIR@

MYLIBDIRS = -L../${ESLDIR} -L../hmmer/src/ -L./${IMPLDIR} -L.
MYINCDIRS = -I../${ESLDIR} \
	    -I${top_srcdir}/easel \
	    -I../hmmer/src \
	    -I. \
	    -I${srcdir}


PROGS = cmalign\
	cmbuild\
	cmcalibrate\
	cmconvert\
	cmemit\
	cmfetch\
	cmpress\
	cmscan\
	cmscore\
	cmsearch\
	cmsim\
	cmstat\
	trcyk\
	bandcyk-montecarlo-test\
	bandcyk-truncation-test\
	cp9-test\
	sub_cm-test\
	truncyk_check

PROGSOBJSS = \
	cmalign.o\
	cmbuild.o\
	cmemit.o\
	cmfetch.o\
	cmscore.o\
	cmsearch.o\
	cmsim.o\
	cmstat.o\
	trcyk.o\
	truncyk_check.o\

HDRS =  funcs.h\
	structs.h

OBJS  = cm.o\
	cm_alidisplay.o\
	cm_dpalign.o\
	cm_dpsearch.o\
	cm_dpsmall.o\
	cm_file.o\
	cm_modelconfig.o\
	cm_modelmaker.o\
	cm_mx.o\
	cm_parsetree.o\
	cm_pipeline.o\
	cm_qdband.o\
	cm_submodel.o\
	cm_tophits.o\
	cm_p7_band.o\
	cm_p7_domaindef.o\
	cm_p7_modelmaker.o\
	cp9.o\
	cp9_dp.o\
	cp9_modelconfig.o\
	cp9_modelmaker.o\
	cp9_mx.o\
	cp9_trace.o\
	alphabet.o\
	dispatch.o\
	display.o\
	eweight.o\
	errors.o\
	hmmband.o\
	logsum.o\
	mpisupport.o\
	prior.o\
	rnamat.o\
	searchinfo.o\
	seqstoaln.o\
	stats.o\
	truncyk.o

BENCHMARKS = \
	cm_tophits_benchmark

UTESTS =\
	cm_tophits_utest\

# Definitions present in HMMER3's Makefile that are not yet necessary in Infernal's
#STATS = 
#ITESTS = 
#EXAMPLES =

# beautification magic stolen from git
QUIET_SUBDIR0 = +${MAKE} -C #space separator after -c
QUIET_SUBDIR1 = 
ifndef V
	QUIET_CC      = @echo '    ' CC $@;
	QUIET_GEN     = @echo '    ' GEN $@;
	QUIET_AR      = @echo '    ' AR $@;
	QUIET_SUBDIR0 = +@subdir=
	QUIET_SUBDIR1 = ; echo '    ' SUBDIR $$subdir; \
		        ${MAKE} -C $$subdir
endif

.PHONY: all dev tests check install uninstall distclean clean TAGS

all:   ${PROGS} .FORCE

dev:   ${PROGS} ${UTESTS} ${BENCHMARKS} ${EXAMPLES} .FORCE
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} dev

tests: ${PROGS} ${UTESTS} .FORCE
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} tests

libinfernal.a: libinfernal-src.stamp .FORCE
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} libinfernal-impl.stamp

libinfernal-src.stamp: ${OBJS}
	${QUIET_AR}${AR} -r libinfernal.a $? > /dev/null 2>&1 
	@${RANLIB} libinfernal.a
	@echo "src_lib objects compiled:\c" > $@
	@date >> $@

.FORCE:

${OBJS}:     ${HDRS} config.h
${PROGOBJS}: ${HDRS} config.h

${PROGS}: @EXEC_DEPENDENCY@  libinfernal.a ../hmmer/src/libhmmer.a ../${ESLDIR}/libeasel.a  
	${QUIET_GEN}${CC} ${CFLAGS} ${SIMDFLAGS} ${DEFS} ${LDFLAGS} ${MYLIBDIRS} -o $@ $@.o ${MPILIBS} ${LIBS}

.c.o:
	${QUIET_CC}${CC} ${CFLAGS} ${SIMDFLAGS} ${DEFS} ${CPPFLAGS} ${MYINCDIRS} -o $@ -c $<

${UTESTS}: libinfernal.a  ${HDRS} config.h
	@BASENAME=`echo $@ | sed -e 's/_utest//' | sed -e 's/^cm_//'` ;\
	DFLAG=`echo $${BASENAME} | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`;\
	DFLAG=CM_$${DFLAG}_TESTDRIVE ;\
	if test -e ${srcdir}/CM_$${BASENAME}.c; then \
           DFILE=${srcdir}/CM_$${BASENAME}.c ;\
        else \
           DFILE=${srcdir}/$${BASENAME}.c ;\
	fi;\
	if test ${V} ;\
	   then echo "{CC} ${CFLAGS} ${SIMDFLAGS} ${CPPFLAGS} ${LDFLAGS} ${DEFS} ${MYLIBDIRS} ${MYINCDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}" ;\
	   else echo '    ' GEN $@ ;\
        fi ;\
	${CC} ${CFLAGS} ${SIMDFLAGS} ${CPPFLAGS} ${LDFLAGS} ${DEFS} ${MYLIBDIRS} ${MYINCDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}

${BENCHMARKS}: libinfernal.a  ${HDRS} config.h
	@BASENAME=`echo $@ | sed -e 's/_benchmark//' | sed -e 's/^cm_//'` ;\
	DFLAG=`echo $${BASENAME} | sed -e 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'`;\
	DFLAG=CM_$${DFLAG}_BENCHMARK ;\
	if test -e ${srcdir}/CM_$${BASENAME}.c; then \
           DFILE=${srcdir}/CM_$${BASENAME}.c ;\
        else \
           DFILE=${srcdir}/$${BASENAME}.c ;\
	fi;\
	if test ${V} ;\
	   then echo "{CC} ${CFLAGS} ${SIMDFLAGS} ${CPPFLAGS} ${LDFLAGS} ${DEFS} ${MYLIBDIRS} ${MYINCDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}" ;\
	   else echo '    ' GEN $@ ;\
        fi ;\
	${CC} ${CFLAGS} ${SIMDFLAGS} ${CPPFLAGS} ${LDFLAGS} ${DEFS} ${MYLIBDIRS} ${MYINCDIRS} -D$${DFLAG} -o $@ $${DFILE} ${LIBS}

install:
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} install
	for file in ${PROGS}; do \
	   ${INSTALL} -m 0755 $$file ${DESTDIR}${bindir}/ ;\
	done
	${INSTALL} -m 0755 libinfernal.a ${DESTDIR}${libdir}/
	for file in ${HDRS}; do \
	   ${INSTALL} -m 0644 ${srcdir}/$$file ${DESTDIR}${includedir}/ ;\
	done
	${INSTALL} -m 0644 config.h ${DESTDIR}${includedir}/ ;\

uninstall:
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} uninstall
	for file in ${PROGS}; do \
	   rm -f ${DESTDIR}${bindir}/$$file ;\
	done
	-rm -f ${DESTDIR}${libdir}/libinfernal.a
	for file in ${HDRS}; do \
	   rm -f ${DESTDIR}${includedir}/$$file ;\
	done
	-rm -f ${DESTDIR}${includedir}/config.h

distclean: clean
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} distclean
	-rm -f Makefile config.h

clean:
	${QUIET_SUBDIR0}${IMPLDIR} ${QUIET_SUBDIR1} clean
	-rm -f *.o *~ Makefile.bak core ${PROGS} TAGS gmon.out
	-rm -f libinfernal.a libinfernal-src.stamp
	-rm -f *.gcno
	-rm -f cscope.out
	for prog in ${PROGS}; do \
	   if test -d $$prog.dSYM; then rm -rf $$prog.dSYM; fi ;\
	done

################################################################
# @LICENSE@
################################################################
