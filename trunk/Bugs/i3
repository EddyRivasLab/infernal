#! /usr/bin/perl

# bug i3 - local hits rooted at insert states.
# SRE, Tue Mar  4 13:59:59 2003
# CVS $Id$
#
# CYKScan() was finding hits that root at insert states,
# which crashes outside(). Manifests in local alignment mode
# when the 0->insert->3 path is cheaper than the local begin
# 0->3 path.
#
# i3.1 =  small hairpin alignment w/ cheap initial IL
# 
# xref STL7 p.43

$usage = "i3 <cmbuild> <cmsearch>\n";
if ($#ARGV != 1) { die "Wrong argument number.\n$usage"; }

$cmbuild  = shift;
$cmsearch = shift;
$ok       = 1;

# Make our test alignment file, i3.1
#
open (OUT, ">i3.1") || die;
print OUT <<END;
# STOCKHOLM 1.0

#=GC RF      .xxxxxxxx
#=GC SS_cons .<<<..>>>
seq1         aGGGAACCC
seq2         aGGGAACCC
seq3         aGGGAACCC
seq4         aGGGAACCC
seq5         aGGGAACCC
seq6         aGGGAACCC
seq7         aGGGAACCC
seq8         aGGGAACCC
seq9         aGGGAACCC
seq10        aGGGAACCC
//
END
close OUT;

# Make our test sequence file, i3.2
#
open (OUT, ">i3.2") || die;
print OUT <<END;
>seq1
aGGGAACCC
>seq2
aGGGAACCC
>seq3
aGGGAACCC
>seq4
aGGGAACCC
>seq5
aGGGAACCC
>seq6
aGGGAACCC
>seq7
aGGGAACCC
>seq8
aGGGAACCC
>seq9
aGGGAACCC
>seq10
aGGGAACCC
END
close OUT;

if ($ok) { 
    system("$cmbuild --rna --rf i3.cm i3.1 > /dev/null 2> /dev/null");
    if ($? != 0) { $ok = 0; }
}
if ($ok) {
    system("$cmsearch i3.cm i3.2 > /dev/null 2> /dev/null");
    if ($? != 0) { $ok = 0; }
}

foreach $tmpfile ("i3.1", "i3.cm") {
    unlink $tmpfile if -e $tmpfile;
}

if ($ok) { print "ok\n";     exit 0; }
else     { print "FAILED\n"; exit 1; }


