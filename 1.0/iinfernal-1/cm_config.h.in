/* @configure_input@
 * cm_config.h.in -> cm_config.h
 * 
 * cm_config.h is generated from cm_config.h.in by the ./configure
 * script.
 * DO NOT EDIT cm_config.h; only edit cm_config.h.in.
 *
 * Configuration of INFERNAL, including both system-dependent
 * configuration (done by ./configure) and hardcoded configuration
 * that someone might want to alter someday.
 *
 * Because this header may configure the behavior of system headers
 * (for example, LFS support), it must be included before any other
 * header file.
 * 
 * note: Built from HMMER3's p7_config.h.in, minimal changes made.
 *
 * EPN, Wed Aug  1 06:58:58 2007
 * SVN $Id$
 */
#ifndef CM_CONFIGH_INCLUDED
#define CM_CONFIGH_INCLUDED


/*****************************************************************
 * 1. Compile-time constants that control INFERNAL's computational 
 *    behavior (memory and processor use), and output formatting.
 *    It can be edited and configured manually before compilation.
 *****************************************************************/

/* cm_RAMLIMIT controls the switch from fast full DP to slow
 * linear-memory divide and conquer. Default devotes 32 MB/thread.
 */
#ifndef cm_RAMLIMIT
#define cm_RAMLIMIT   32
#endif

/* cm_ALILENGTH controls length of displayed alignment lines.
 */
#ifndef cm_ALILENGTH
#define cm_ALILENGTH       50
#endif

/*****************************************************************
 * 2. Compile-time constants that control empirically tuned INFERNAL
 *    default parameters. You can edit it, but you ought not to, 
 *    unless you're trying to improve on our empirical data.
 *****************************************************************/

/* Relative entropy target defaults:
 * cmbuild's effective sequence number calculation aims to achieve a
 * certain relative entropy per match emission.
 * (= average score per match emission).
 * These are empirically tuned constants, from the RMARK-1 benchmark
 * (Nawrocki and Eddy, PLoS Comp Bio, 2007)
 */
#define cm_ETARGET_DNA    0.56 /* bits */
#define cm_ETARGET_OTHER  1.0  /* bits */ /* if you define your own alphabet, set this */



/*****************************************************************
 * 3. The next section probably shouldn't be edited at all, unless
 *    you really know what you're doing. It controls some fundamental
 *    parameters in INFERNAL that occasionally get reconfigured in
 *    experimental versions, or for variants of INFERNAL that work on
 *    non-biological alphabets.
 *****************************************************************/

/* The symbol alphabet is handled by ESL_ALPHABET objects, which
 * dynamically allocate; but sometimes HMMER uses statically-allocated
 * space, and it's useful to know a reasonable maximum for
 * symbol alphabet size.
 */
#define cm_MAXABET    5      /* maximum size of alphabet (4 or 20)              */
#define cm_MAXCODE    17     /* maximum degenerate alphabet size (17 or 28)     */

/* cm_MAX_SC_TXTLEN has to be large enough to represent a score as a
 * string, including \0 and a sign.
 */
#define cm_MAX_SC_TXTLEN   11	      

/* In Forward algorithm implementations, we use a table lookup in
 * cm_FLogsum() to calculate summed probabilities in log
 * space. cm_INTSCALE defines the precision of the calculation; the
 * default of 1000.0 means rounding differences to the nearest 0.001
 * nat. cm_LOGSUM_TBL defines the size of the lookup table; the
 * default of 16000 means entries are calculated for differences of 0
 * to 16.000 nats (when cm_INTSCALE is 1000.0).  e^{-cm_LOGSUM_TBL /
 * cm_INTSCALE} should be on the order of the machine FLT_EPSILON,
 * typically 1.2e-7.
 */
#define cm_INTSCALE     1000.0f
#define cm_LOGSUM_TBL   16000

/* Some implementation plugins use scaled integer log odds scores
 * (SILO scores) instead of floating-point. (HMMER2 also used SILO
 * scores.)  infernal.c includes some support for SILO scores. They are
 * calculated using the same <cm_INTSCALE> from above. We also have to
 * define a suitable value of -infinity, immune to integer underflow
 * if two of them are added together: that is, <cm_IMPOSSIBLE> >= -
 * (INT_MIN / 2).
 */
#define  cm_IMPOSSIBLE -987654321

/* Other stuff.
 */
#define cm_MAXDCHLET  16      /* maximum # Dirichlet components in mixture prior */





/*****************************************************************
 * 4. The final section isn't meant to be human editable at all.
 *    It is configured automatically by the ./configure script. 
 *****************************************************************/

/* Version info - set once for whole package in configure.ac
 */
#undef INFERNAL_VERSION
#undef INFERNAL_DATE
#undef INFERNAL_COPYRIGHT
#undef INFERNAL_LICENSE

/* Large file support (must precede any header file inclusion.)
 */
#undef _FILE_OFFSET_BITS
#undef _LARGE_FILES
#undef _LARGEFILE_SOURCE

/* Choice of optimized implementation
 */
#undef cm_IMPL_REFERENCE 
#undef cm_IMPL_FAST      
#undef cm_IMPL_ALTIVEC	 
#undef cm_IMPL_BUHLER    
#undef cm_IMPL_SSE	 

/* Optional parallel implementations
 */
#undef HAVE_MPI
#undef INFERNAL_PVM
#undef INFERNAL_THREADS
#undef HAVE_PTHREAD_ATTR_SETSCOPE
#undef HAVE_PTHREAD_SETCONCURRENCY
#undef INFERNAL_NCPU	

/* Debugging hooks
 */
#undef cm_DEBUGLEVEL

#endif /*P7_CONFIGH_INCLUDED*/
/*****************************************************************
 * @LICENSE@
 *****************************************************************/
